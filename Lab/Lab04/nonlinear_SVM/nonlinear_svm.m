%% Initializationclear ; close all; clcaddpath('./libsvm-3.22/matlab');%% ==================== Part 1: linear SVM ====================%% 加载数据[train_y, train_x] = libsvmread('ex8a.txt');gamma = 0.21;%%  获取大小[m,n] = size(train_x);model = svmtrain(train_y, train_x, sprintf('-s 0 -t 2 -g %g', gamma));fprintf('Program paused. Press enter to display data.\n');pause;plotboundary(train_y, train_x, model);fprintf('\nProgram paused. Press enter to predicted_label.\n');pause;[test_y, test_x] = libsvmread('ex8b.txt');[predicted_label, accuracy, decision_values] = svmpredict(test_y, test_x, model);fprintf('\nProgram paused. Press enter to continue.\n');pause;% SVM ParametersC = 1; sigma = 0.1;% We set the tolerance and max_passes lower here so that the code will run% faster. However, in practice, you will want to run the training to% convergence.model2= svmTrain(train_x, train_y, C, @(x1, x2) gaussianKernel(x1, x2, sigma)); visualizeBoundary(train_x, train_y, model2);fprintf('\nProgram paused. Press enter to predicted_label.\n');pause;p = svmPredict(model2, test_x);fprintf('Training Accuracy: %f\n', mean(double(p == test_y)) * 100);